<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.springframework.org/schema/beans 
		                    http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		                    http://www.springframework.org/schema/context 
		                    http://www.springframework.org/schema/context/spring-context-2.5.xsd
		                    http://www.springframework.org/schema/tx 
		                    http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		                    http://www.springframework.org/schema/aop 
		                    http://www.springframework.org/schema/aop/spring-aop-2.5.xsd"> 
		 
	<!-- 1 配置注解的自动扫描-->
   <context:component-scan base-package="com.zkbr"/>

   <!-- 2 配置数据源 -->
   	 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	    <property name="driverClassName" value="org.gjt.mm.mysql.Driver"/>
	    <property name="url" value="jdbc:mysql://localhost:3306/mybatis2014?useUnicode=true&amp;characterEncoding=UTF-8"/>
	    <property name="username" value="root"/>
	    <property name="password" value="root"/>
		<property name="initialSize" value="1"/> <!-- 连接池启动时的初始值 -->
		<property name="maxActive" value="500"/><!-- 连接池的最大值 -->
		<property name="maxIdle" value="2"/><!-- 最大空闲值.当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接慢慢释放一部分，一直减少到maxIdle为止 -->
		<property name="minIdle" value="1"/><!--   最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接，以免洪峰来时来不及申请 -->
	 </bean>
  
   <!--3 配置处理事务的注解-->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
  	   <property name="dataSource" ref="dataSource"/>
	</bean>
	<tx:annotation-driven transaction-manager="txManager"/>
		                    

	<!--4 开始通过RmiServiceExporter向外暴露service =================================================== -->
	<bean  class="org.springframework.remoting.rmi.RmiServiceExporter">
		<property name="serviceName" value="accountService" /><!-- 该属性表示服务名 -->
		<property name="service" ref="accountService" /><!-- 该属性表示提供服务的类 -->
		<property name="serviceInterface" value="com.zkbr.service.AccountService" /><!-- 该属性表示服务接口名 -->
		<property name="registryPort" value="8888" /><!-- 该属性表示服务端口 -->
	</bean>

	<bean class="org.springframework.remoting.rmi.RmiServiceExporter">
		<property name="serviceName" value="appleService" /><!-- 该属性表示服务名 -->
		<property name="service" ref="appleService" /><!-- 该属性表示提供服务的类 -->
		<property name="serviceInterface" value="com.zkbr.service.IAppleService" /><!-- 该属性表示服务接口名 -->
		<property name="registryPort" value="8888" /><!-- 该属性表示服务端口 -->
	</bean>


	<bean id="accountService" 	class="com.zkbr.service.impl.AccountServiceImpl" />
	<bean id="appleService"   	class="com.zkbr.service.impl.AppleServiceImpl" />

</beans>










